Updated api-tests.http for JWT Authentication Testing
Here's your improved api-tests.http file with better organization and comprehensive JWT testing:
Updated api-tests.http:
http### =================
### JWT AUTHENTICATION TESTS (Run these first)
### =================

### 1. Register a new user
POST http://localhost:8080/api/auth/register
Content-Type: application/json

{
  "username": "johndoe",
  "email": "john.doe@example.com",
  "password": "password123"
}

### 2. Login with the registered user (Copy the token from response!)
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "username": "johndoe",
  "password": "password123"
}

### 3. Register another user for testing
POST http://localhost:8080/api/auth/register
Content-Type: application/json

{
  "username": "janedoe",
  "email": "jane.doe@example.com",
  "password": "password456"
}

### 4. Login with second user
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "username": "janedoe",
  "password": "password456"
}

### =================
### ERROR SCENARIOS
### =================

### 5. Try to register with existing username (should fail)
POST http://localhost:8080/api/auth/register
Content-Type: application/json

{
  "username": "johndoe",
  "email": "different@example.com",
  "password": "password789"
}

### 6. Try to register with existing email (should fail)
POST http://localhost:8080/api/auth/register
Content-Type: application/json

{
  "username": "differentuser",
  "email": "john.doe@example.com",
  "password": "password789"
}

### 7. Login with wrong password (should fail)
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "username": "johndoe",
  "password": "wrongpassword"
}

### 8. Login with non-existent user (should fail)
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "username": "nonexistentuser",
  "password": "password123"
}

### =================
### PROTECTED ENDPOINTS - WITH VALID JWT TOKEN
### =================
### IMPORTANT: Copy JWT token from test #2 login response and paste below

### 9. Test Status (public endpoint - should work without token)
GET http://localhost:8080/api/test/status

### 10. Get All Users (protected - requires valid token)
GET http://localhost:8080/api/test/users
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### 11. Get Count (protected - requires valid token)
GET http://localhost:8080/api/test/count
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### 12. Get All Workouts (protected - requires valid token)
GET http://localhost:8080/api/test/workouts
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### 13. Create Sample Data (protected - requires valid token)
POST http://localhost:8080/api/test/create-sample-data
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### 14. Create Custom User via Test Endpoint (protected - requires valid token)
POST http://localhost:8080/api/test/user
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw
Content-Type: application/json

{
  "username": "testuser",
  "email": "test@example.com",
  "password": "testpassword"
}

### 15. Create Custom Workout (protected - requires valid token)
POST http://localhost:8080/api/test/workout
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw
Content-Type: application/json

{
  "name": "Squats",
  "description": "Leg exercise",
  "category": "Legs",
  "cardio": false
}

### =================
### PROTECTED ENDPOINTS - WITHOUT TOKEN (Should all return 401)
### =================

### 16. Try to get users without token (should return 401)
GET http://localhost:8080/api/test/users

### 17. Try to get count without token (should return 401)
GET http://localhost:8080/api/test/count

### 18. Try to create workout without token (should return 401)
POST http://localhost:8080/api/test/workout
Content-Type: application/json

{
  "name": "Unauthorized Workout",
  "description": "This should fail",
  "category": "Test",
  "cardio": false
}

### =================
### INVALID TOKEN TESTS (Should all return 401)
### =================

### 19. Test with completely invalid token
GET http://localhost:8080/api/test/users
Authorization: Bearer invalid.jwt.token.here

### 20. Test with malformed token
GET http://localhost:8080/api/test/users
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.INVALID.SIGNATURE

### 21. Test with Bearer prefix missing
GET http://localhost:8080/api/test/users
Authorization: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### 22. Test with wrong authorization header
GET http://localhost:8080/api/test/users
Authorization: Basic dGVzdDp0ZXN0

### =================
### VALIDATION TESTS
### =================

### 23. Register with invalid email (should fail)
POST http://localhost:8080/api/auth/register
Content-Type: application/json

{
  "username": "validuser",
  "email": "notanemail",
  "password": "password123"
}

### 24. Register with too short password (should fail)
POST http://localhost:8080/api/auth/register
Content-Type: application/json

{
  "username": "validuser2",
  "email": "valid@email.com",
  "password": "123"
}

### 25. Register with missing username (should fail)
POST http://localhost:8080/api/auth/register
Content-Type: application/json

{
  "email": "missing@username.com",
  "password": "password123"
}

### 26. Login with missing fields (should fail)
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "username": "johndoe"
}

### Test if auth controller is accessible
GET http://localhost:8080/api/auth/test

### Test without a token
GET http://localhost:8080/api/workouts

### Protected endpoint with valid JWT:
GET http://localhost:8080/api/workouts
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Invalid JWT Test
GET http://localhost:8080/api/workouts
Authorization: Bearer invalid.token.here

### =================
### WORKOUT CONTROLLER TESTS
### (Use valid JWT token from login tests above)
### =================

### Get all workouts (should work with valid token)
GET http://localhost:8080/api/workouts
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Create a new workout
POST http://localhost:8080/api/workouts
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw
Content-Type: application/json

{
  "workoutName": "Push-ups",
  "workoutDescription": "Classic bodyweight exercise",
  "workoutCategory": "Chest",
  "imageUrl": "/images/pushups.jpg",
  "isCardio": false
}

### Create another workout for testing
POST http://localhost:8080/api/workouts
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw
Content-Type: application/json

{
  "workoutName": "Running",
  "workoutDescription": "Cardiovascular exercise",
  "workoutCategory": "Cardio",
  "imageUrl": "/images/running.jpg",
  "isCardio": true
}

### Get workout by ID (use ID from create response above)
GET http://localhost:8080/api/workouts/1
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Get non-existent workout (should return 404)
GET http://localhost:8080/api/workouts/999
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Search workouts by name
GET http://localhost:8080/api/workouts/search?name=push
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Get workouts by category
GET http://localhost:8080/api/workouts/category/Chest
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Get cardio workouts
GET http://localhost:8080/api/workouts/type?cardio=true
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Get strength workouts
GET http://localhost:8080/api/workouts/type?cardio=false
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Update a workout (use ID from create response)
PUT http://localhost:8080/api/workouts/1
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw
Content-Type: application/json

{
  "workoutName": "Modified Push-ups",
  "workoutDescription": "Updated classic bodyweight exercise",
  "workoutCategory": "Chest",
  "imageUrl": "/images/pushups-updated.jpg",
  "isCardio": false
}

### =================
### WORKOUT VALIDATION TESTS
### =================

### Create workout with missing name (should fail)
POST http://localhost:8080/api/workouts
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw
Content-Type: application/json

{
  "workoutDescription": "Missing name exercise",
  "workoutCategory": "Test",
  "isCardio": false
}

### Create workout with too short name (should fail)
POST http://localhost:8080/api/workouts
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw
Content-Type: application/json

{
  "workoutName": "A",
  "workoutDescription": "Name too short",
  "workoutCategory": "Test",
  "isCardio": false
}

### Delete a workout - CORRECTED
DELETE http://localhost:8080/api/workouts/2
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### =================
### WORKOUT LOG CONTROLLER TESTS
### =================

### Start a new workout session
POST http://localhost:8080/api/workout-logs
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw
Content-Type: application/json

{
  "workoutId": 1,
  "date": "2024-01-15"
}

### Get workout history
GET http://localhost:8080/api/workout-logs
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Get recent workout logs
GET http://localhost:8080/api/workout-logs/recent?limit=5
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Get specific workout log by ID
GET http://localhost:8080/api/workout-logs/1
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Update workout log
PUT http://localhost:8080/api/workout-logs/1
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw
Content-Type: application/json

{
  "workoutId": 1,
  "date": "2024-01-15"
}

### Get workout statistics
GET http://localhost:8080/api/workout-logs/stats
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### =================
### PERFORMANCE CONTROLLER TESTS
### =================

### Create a performance record
POST http://localhost:8080/api/performance
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw
Content-Type: application/json

{
  "workoutLogId": 1,
  "setNumber": 1,
  "reps": 12,
  "weight": 135.5,
  "notes": "Felt strong today"
}

### Create another performance record (cardio)
POST http://localhost:8080/api/performance
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw
Content-Type: application/json

{
  "workoutLogId": 1,
  "setNumber": 1,
  "durationMinutes": 30,
  "distanceKm": 5.2,
  "caloriesBurned": 350,
  "notes": "Good pace"
}

### Get performance records for a workout log
GET http://localhost:8080/api/performance/workout-log/1
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Get user performance history for a specific workout
GET http://localhost:8080/api/performance/workout/1
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Update a performance record
PUT http://localhost:8080/api/performance/1
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw
Content-Type: application/json

{
  "workoutLogId": 1,
  "setNumber": 1,
  "reps": 15,
  "weight": 140.0,
  "notes": "Increased weight!"
}

### Delete a performance record
DELETE http://localhost:8080/api/performance/1
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Get max weight for a specific workout
GET http://localhost:8080/api/performance/analytics/max-weight/1
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### Get total volume for date range
GET http://localhost:8080/api/performance/analytics/volume?startDate=2024-01-01&endDate=2024-01-31
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4NTQ5NTg0LCJleHAiOjE3NDg2MzU5ODR9.65R6qSdKSESSpjaVUD2ZiVEzLW93hISfk9i6CYt4WIb3TfLVg8Uo9YdOAzUALsjOkrRNJlKSn30x-45O2ZLxIw

### =================
### SUBSCRIPTION GATING TESTS (Add these to your existing file)
### =================

### Test subscription status
GET http://localhost:8080/api/subscriptions/test/1
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4ODAzMzgxLCJleHAiOjE3NDg4ODk3ODF9.QEX5zWm1dYmbvr9sL3JWkpe6HIhWVSDHSLf0qPOsKWOOW29h0BochJuCBE8TxzKC2kuck5LrpAdpCMe_yWd7Rg

### Test analytics endpoint (should be BLOCKED for FREE user)
GET http://localhost:8080/api/performance/analytics/max-weight/1
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4ODAzMzgxLCJleHAiOjE3NDg4ODk3ODF9.QEX5zWm1dYmbvr9sL3JWkpe6HIhWVSDHSLf0qPOsKWOOW29h0BochJuCBE8TxzKC2kuck5LrpAdpCMe_yWd7Rg

### Test volume analytics (should also be BLOCKED for FREE user)
GET http://localhost:8080/api/performance/analytics/volume?startDate=2024-01-01&endDate=2024-01-31
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNzQ4ODAzMzgxLCJleHAiOjE3NDg4ODk3ODF9.QEX5zWm1dYmbvr9sL3JWkpe6HIhWVSDHSLf0qPOsKWOOW29h0BochJuCBE8TxzKC2kuck5LrpAdpCMe_yWd7Rg
### =================
### BASIC API TESTS
### =================

### 1. Status Check
GET http://localhost:8080/api/test/status

### 2. Create Sample Data
POST http://localhost:8080/api/test/create-sample-data

### 3. Get Count
GET http://localhost:8080/api/test/count

### 4. Get All Users
GET http://localhost:8080/api/test/users

### 5. Get All Workouts
GET http://localhost:8080/api/test/workouts

### 6. Create Custom User (via test endpoint)
POST http://localhost:8080/api/test/user
Content-Type: application/json

{
  "username": "john_doe",
  "email": "john@example.com",
  "password": "mypassword"
}

### 7. Create Custom Workout
POST http://localhost:8080/api/test/workout
Content-Type: application/json

{
  "name": "Squats",
  "description": "Leg exercise",
  "category": "Legs",
  "cardio": false
}

### =================
### JWT AUTHENTICATION TESTS
### =================

### 8. Register a new user (via auth endpoint)
POST http://localhost:8080/api/auth/register
Content-Type: application/json

{
  "username": "johndoe",
  "email": "john.doe@example.com",
  "password": "password123"
}

### 9. Try to register with same username (should fail)
POST http://localhost:8080/api/auth/register
Content-Type: application/json

{
  "username": "johndoe",
  "email": "different@example.com",
  "password": "password456"
}

### 10. Login with the registered user
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "username": "johndoe",
  "password": "password123"
}

### 11. Login with wrong password (should fail)
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "username": "johndoe",
  "password": "wrongpassword"
}

### 12. Test protected endpoint without token (should return 401)
GET http://localhost:8080/api/test/users

### 13. Test protected endpoint with JWT token
# First run test #10 to get a token, then copy it below
# GET http://localhost:8080/api/test/users
# Authorization: Bearer YOUR_JWT_TOKEN_HERE

### =================
### ADDITIONAL JWT TESTS
### =================

### 14. Register another user
POST http://localhost:8080/api/auth/register
Content-Type: application/json

{
  "username": "janedoe",
  "email": "jane.doe@example.com",
  "password": "password456"
}

### 15. Test with invalid token
GET http://localhost:8080/api/test/users
Authorization: Bearer invalid.jwt.token

### 16. Test with expired token (you can manually create one later)
# GET http://localhost:8080/api/test/users
# Authorization: Bearer expired.jwt.token